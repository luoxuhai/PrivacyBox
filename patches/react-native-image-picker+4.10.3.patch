diff --git a/node_modules/react-native-image-picker/ios/ImagePickerManager.m b/node_modules/react-native-image-picker/ios/ImagePickerManager.m
index 10c5b4e..4d67662 100644
--- a/node_modules/react-native-image-picker/ios/ImagePickerManager.m
+++ b/node_modules/react-native-image-picker/ios/ImagePickerManager.m
@@ -195,9 +195,16 @@ -(NSMutableDictionary *)mapImageToAsset:(UIImage *)image data:(NSData *)data phA
     asset[@"height"] = @(newImage.size.height);
     
     if(phAsset){
-        asset[@"timestamp"] = [self getDateTimeInUTC:phAsset.creationDate];
+        long long ctime = phAsset.creationDate.timeIntervalSince1970 * 1000;
+        long long mtime = phAsset.modificationDate.timeIntervalSince1970 * 1000;
+        asset[@"ctime"] = @(ctime);
+        asset[@"mtime"] = @(mtime);
         asset[@"id"] = phAsset.localIdentifier;
-        // Add more extra data here ...
+        CLLocation * location = phAsset.location;
+        asset[@"location"] = @{@"speed": @(location.speed),
+                              @"altitude": @(location.altitude),
+                              @"latitude": @(location.coordinate.latitude),
+                               @"longitude": @(location.coordinate.longitude)};
     }
     
     return asset;
@@ -252,7 +259,7 @@ -(NSMutableDictionary *)mapVideoToAsset:(NSURL *)url phAsset:(PHAsset * _Nullabl
     NSMutableDictionary *asset = [[NSMutableDictionary alloc] init];
     CGSize dimentions = [ImagePickerUtils getVideoDimensionsFromUrl:videoDestinationURL];
     asset[@"fileName"] = fileName;
-    asset[@"duration"] = [NSNumber numberWithDouble:CMTimeGetSeconds([AVAsset assetWithURL:videoDestinationURL].duration)];
+    asset[@"duration"] = @(phAsset.duration * 1000);
     asset[@"uri"] = videoDestinationURL.absoluteString;
     asset[@"type"] = [ImagePickerUtils getFileTypeFromUrl:videoDestinationURL];
     asset[@"fileSize"] = [ImagePickerUtils getFileSizeFromUrl:videoDestinationURL];
@@ -260,9 +267,16 @@ -(NSMutableDictionary *)mapVideoToAsset:(NSURL *)url phAsset:(PHAsset * _Nullabl
     asset[@"height"] = @(dimentions.height);
 
     if(phAsset){
-        asset[@"timestamp"] = [self getDateTimeInUTC:phAsset.creationDate];
+        long long ctime = phAsset.creationDate.timeIntervalSince1970 * 1000;
+        long long mtime = phAsset.modificationDate.timeIntervalSince1970 * 1000;
+        asset[@"ctime"] = @(ctime);
+        asset[@"mtime"] = @(mtime);
         asset[@"id"] = phAsset.localIdentifier;
-        // Add more extra data here ...
+        CLLocation * location = phAsset.location;
+        asset[@"location"] = @{@"speed": @(location.speed),
+                              @"altitude": @(location.altitude),
+                              @"latitude": @(location.coordinate.latitude),
+                               @"longitude": @(location.coordinate.longitude)};
     }
 
     return asset;
diff --git a/node_modules/react-native-image-picker/ios/ImagePickerUtils.m b/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
index 3afe9d6..f0787cd 100644
--- a/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
+++ b/node_modules/react-native-image-picker/ios/ImagePickerUtils.m
@@ -39,10 +39,11 @@ + (void) setupPickerFromOptions:(UIImagePickerController *)picker options:(NSDic
         picker.mediaTypes = @[(NSString *)kUTTypeMovie];
     } else if ([options[@"mediaType"] isEqualToString:@"photo"]) {
         picker.mediaTypes = @[(NSString *)kUTTypeImage];
-    } else if ((target == library) && ([options[@"mediaType"] isEqualToString:@"mixed"])) {
+    } else if ([options[@"mediaType"] isEqualToString:@"mixed"]) {
         picker.mediaTypes = @[(NSString *)kUTTypeImage, (NSString *)kUTTypeMovie];
     }
 
+    picker.allowsEditing = YES;
     picker.modalPresentationStyle = [RCTConvert UIModalPresentationStyle:options[@"presentationStyle"]];
 }
 
